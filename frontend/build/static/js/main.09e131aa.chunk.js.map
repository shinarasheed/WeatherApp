{"version":3,"sources":["redux/actions.js","redux/weatherReducer.js","redux/myWeatherReducer.js","redux/store.js","components/WeatherFormSecond.js","components/WeatherInfoPanel.js","components/MyWeather.js","components/WeatherData.js","components/WeatherHistoryPanel.js","components/WeatherPanels.js","components/Container.js","App.js","reportWebVitals.js","components/Header.js","index.js"],"names":["GET_WEATHER_REQUEST","GET_WEATHER_SUCCESS","GET_WEATHER_FAIL","GET_MY_WEATHER_REQUEST","GET_MY_WEATHER_SUCCESS","GET_MY_WEATHER_FAIL","initialState","weatherData","isLoading","error","weatherReducer","state","action","type","payload","myWeatherData","myWeatherReducer","rootReducer","combineReducers","weather","myWeather","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","WeatherFormSecond","dispatch","useDispatch","useState","city","setCity","lat","setLat","long","setLong","useEffect","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","handleGetWeather","a","axios","post","response","data","console","log","getMyWeather","className","Button","onClick","Form","onSubmit","e","cityName","preventDefault","Control","name","value","placeholder","onChange","target","style","marginLeft","WeatherInfoPanel","useSelector","marginRight","sys","country","src","icon","alt","description","main","humidity","temp","temp_min","temp_max","MyWeather","WeatherData","WeatherHistoryPanel","history","timestamp","zipcode","temperature","createHistoryList","historyComponents","historyList","i","length","infoCard","getInfoListItem","push","Card","ListGroup","variant","info","Item","this","Component","WeatherPanels","Container","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Header","role","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAEaA,EAAsB,sBACtBC,EAAsB,sBACtBC,EAAmB,mBAEnBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAsB,sBCF7BC,EAAe,CACnBC,YAAa,KACbC,WAAW,EACXC,MAAO,MAGIC,EAAiB,WAAmC,IAAlCC,EAAiC,uDAAzBL,EAAcM,EAAW,uCAC9D,OAAQA,EAAOC,MACb,KAAKb,EACH,OAAO,2BACFW,GADL,IAEEH,WAAW,IAEf,KAAKP,EACH,OAAO,2BACFU,GADL,IAEEJ,YAAaK,EAAOE,QACpBN,WAAW,IAGf,KAAKN,EACH,OAAO,2BACFS,GADL,IAEEF,MAAOG,EAAOE,UAGlB,QACE,OAAOH,IC3BPL,EAAe,CACnBS,cAAe,KACfP,WAAW,EACXC,MAAO,MAGIO,EAAmB,WAAmC,IAAlCL,EAAiC,uDAAzBL,EAAcM,EAAW,uCAChE,OAAQA,EAAOC,MACb,KAAKV,EACH,OAAO,2BACFQ,GADL,IAEEH,WAAW,IAEf,KAAKJ,EACH,OAAO,2BACFO,GADL,IAEEI,cAAeH,EAAOE,QACtBN,WAAW,IAGf,KAAKH,EACH,OAAO,2BACFM,GADL,IAEEF,MAAOG,EAAOE,UAGlB,QACE,OAAOH,IC3BPM,EAAcC,0BAAgB,CAClCC,QAAST,EACTU,UAAWJ,IAKPK,EAAa,CAACC,KAQLC,EANDC,sBACZP,EALmB,GAOnBQ,8BAAoBC,kBAAe,WAAf,EAAmBL,K,uCCgC1BM,EA7CW,WACxB,IAAMC,EAAWC,cACjB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAsBF,mBAAS,IAA/B,mBAAOG,EAAP,KAAYC,EAAZ,KACA,EAAwBJ,mBAAS,IAAjC,mBAAOK,EAAP,KAAaC,EAAb,KAOAC,qBAAU,WACRC,UAAUC,YAAYC,oBAAmB,SAACC,GACxCP,EAAOO,EAASC,OAAOC,UACvBP,EAAQK,EAASC,OAAOE,gBAEzB,IAEH,IAAMC,EAAmB,WACvBjB,EJQF,SAAC,GAAD,IAAGK,EAAH,EAAGA,IAAKE,EAAR,EAAQA,KAAR,8CACA,WAAOP,GAAP,iBAAAkB,EAAA,sEAEIlB,EAAS,CACPf,KAAMV,IAHZ,SAM2B4C,IAAMC,KAAN,iCACKf,EADL,iBACiBE,IAP5C,cAMUc,EANV,gBASuBA,EAASC,KAThC,OASUA,EATV,OAUItB,EAAS,CACPf,KAAMT,EACNU,QAASoC,IAZf,kDAeItB,EAAS,CACPf,KAAMR,EACNS,QAAQ,EAAD,KAETqC,QAAQC,IAAR,8CAnBJ,0DADA,sDIRWC,CAAa,CAAEpB,MAAKE,WAG/B,OACE,0BAASmB,UAAU,kBAAnB,UACE,8BACE,cAACC,EAAA,EAAD,CAAQC,QAAS,kBAAMX,KAAvB,2BAEF,8BACE,eAACY,EAAA,EAAD,CAAMH,UAAU,eAAeI,SAtBd,SAACC,GJDA,IAACC,EIEvBD,EAAEE,iBACFjC,GJHuBgC,EIGH7B,EJHE,uCAAc,WAAOH,GAAP,iBAAAkB,EAAA,sEAEpClB,EAAS,CACPf,KAAMb,IAH4B,SAMb+C,IAAMC,KAAN,wBAA4BY,IANf,cAM9BX,EAN8B,gBAOjBA,EAASC,KAPQ,OAO9BA,EAP8B,OAQpCtB,EAAS,CACPf,KAAMZ,EACNa,QAASoC,IAVyB,kDAapCtB,EAAS,CACPf,KAAMX,EACNY,QAAQ,EAAD,KAETqC,QAAQC,IAAR,8CAjBoC,0DAAd,yDIuBlB,UACE,cAACK,EAAA,EAAKK,QAAN,CACEC,KAAK,OACLC,MAAOjC,EACPlB,KAAK,OACLoD,YAAY,kBACZC,SAAU,SAACP,GAAD,OAAO3B,EAAQ2B,EAAEQ,OAAOH,UAEpC,cAACT,EAAA,EAAD,CAAQa,MAAO,CAAEC,WAAY,OAASxD,KAAK,SAA3C,2BCsBKyD,EA5DU,WACvB,IAAMnD,EAAUoD,aAAY,SAAC5D,GAAD,OAAWA,EAAMQ,WACrCZ,EAA2BY,EAA3BZ,YAAaC,EAAcW,EAAdX,UACrB,OACE,mCACGA,EACC,qBAAK8C,UAAU,gCAAf,SACE,6CAEgB,OAAhB/C,EACF,wBAEA,0BAAS+C,UAAU,eAAnB,UACE,sBAAKA,UAAU,gCAAf,UACE,oBAAIc,MAAO,CAAEI,YAAa,QAAUlB,UAAU,YAA9C,SACG/C,EAAY2C,KAAKa,OAEpB,oBAAIT,UAAU,YAAd,SAA2B/C,EAAY2C,KAAKuB,IAAIC,aAElD,0BAASpB,UAAU,WAAnB,UACE,qBACEqB,IAAG,2CAAsCpE,EAAY2C,KAAK/B,QAAQ,GAAGyD,KAAlE,WACHtB,UAAU,eACVuB,IAAI,iBAEN,sBAAMvB,UAAU,uBAAhB,SACG/C,EAAY2C,KAAK/B,QAAQ,GAAG2D,iBAIjC,uBAEA,0BAASxB,UAAU,kBAAnB,UACE,uBAAMA,UAAU,WAAhB,uBACa/C,EAAY2C,KAAK6B,KAAKC,SADnC,OAGA,uBAAM1B,UAAU,YAAhB,mBACS/C,EAAY2C,KAAK6B,KAAKE,KAD/B,WAGA,uBAAM3B,UAAU,aAAhB,yBACe/C,EAAY2C,KAAK6B,KAAKE,KADrC,cAKF,uBAEA,0BAAS3B,UAAU,QAAnB,UACE,uBAAMA,UAAU,WAAhB,kBACQ/C,EAAY2C,KAAK6B,KAAKG,SAD9B,WAGA,uBAAM5B,UAAU,WAAhB,mBACS/C,EAAY2C,KAAK6B,KAAKI,SAD/B,oBCUGC,EA5DG,WAChB,IAAMjE,EAAUoD,aAAY,SAAC5D,GAAD,OAAWA,EAAMS,aACrCL,EAA6BI,EAA7BJ,cAAeP,EAAcW,EAAdX,UACvB,OACE,mCACGA,EACC,qBAAK8C,UAAU,gCAAf,SACE,6CAEkB,OAAlBvC,EACF,wBAEA,0BAASuC,UAAU,eAAnB,UACE,sBAAKA,UAAU,gCAAf,UACE,oBAAIc,MAAO,CAAEI,YAAa,QAAUlB,UAAU,YAA9C,SACGvC,EAAcmC,KAAKa,OAEtB,oBAAIT,UAAU,YAAd,SAA2BvC,EAAcmC,KAAKuB,IAAIC,aAEpD,0BAASpB,UAAU,WAAnB,UACE,qBACEqB,IAAG,2CAAsC5D,EAAcmC,KAAK/B,QAAQ,GAAGyD,KAApE,WACHtB,UAAU,eACVuB,IAAI,iBAEN,sBAAMvB,UAAU,uBAAhB,SACGvC,EAAcmC,KAAK/B,QAAQ,GAAG2D,iBAInC,uBAEA,0BAASxB,UAAU,kBAAnB,UACE,uBAAMA,UAAU,WAAhB,uBACavC,EAAcmC,KAAK6B,KAAKC,SADrC,OAGA,uBAAM1B,UAAU,YAAhB,mBACSvC,EAAcmC,KAAK6B,KAAKE,KADjC,WAGA,uBAAM3B,UAAU,aAAhB,yBACevC,EAAcmC,KAAK6B,KAAKE,KADvC,cAKF,uBAEA,0BAAS3B,UAAU,QAAnB,UACE,uBAAMA,UAAU,WAAhB,kBACQvC,EAAcmC,KAAK6B,KAAKG,SADhC,WAGA,uBAAM5B,UAAU,WAAhB,mBACSvC,EAAcmC,KAAK6B,KAAKI,SADjC,oBCpCGE,EAbK,WAClB,OACE,oCACE,8BACE,cAAC,EAAD,MAEF,8BACE,cAAC,EAAD,U,gDC+COC,E,4MAtDb3E,MAAQ,CACN4E,QAAS,CACP,CACEC,UAAW,yBACXzD,KAAM,aACN0D,QAAS,QACTC,YAAa,MACbZ,YAAa,aAEf,CACEU,UAAW,yBACXzD,KAAM,UACN0D,QAAS,QACTC,YAAa,MACbZ,YAAa,e,EAKnBa,kBAAoB,WAKlB,IAJA,IAAIC,EAAoB,GACpBC,EAAc,EAAKlF,MAAM4E,QAGpBO,EAAID,EAAYE,OAAS,EAAGD,GAAK,EAAGA,IAAK,CAChD,IAAIE,EAAW,EAAKC,gBAAgBJ,EAAYC,IAChDF,EAAkBM,KAAKF,GAGzB,OACE,cAACG,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAWC,QAAQ,QAAnB,SAA4BT,O,EAKlCK,gBAAkB,SAACK,GACjB,OACE,eAACF,EAAA,EAAUG,KAAX,WACE,4BAAID,EAAKd,YADX,OAC8Bc,EAAKvE,KADnC,KAC2CuE,EAAKb,QADhD,MAEGa,EAAKZ,YAFR,KAEuBY,EAAKxB,YAF5B,MAAqBwB,EAAKvE,O,4CAO9B,WACE,OACE,yBAASuB,UAAU,wBAAnB,SACKkD,KAAK7F,MAAM4E,QAAQQ,OAASS,KAAKb,oBAAsB,oB,GAjDhCc,aCUnBC,EATO,WACpB,OACE,0BAASpD,UAAU,iBAAnB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCOSqD,EAVG,WAChB,OACE,0BAASrD,UAAU,oBAAnB,UAEE,cAAC,EAAD,IACA,cAAC,EAAD,QCKSsD,MAVf,WACE,OACE,cAAC,IAAD,CAAUrF,MAAOA,EAAjB,SACE,qBAAK+B,UAAU,MAAf,SACE,cAAC,EAAD,SCGOuD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCQCQ,G,MAbA,WACb,OACE,yBAAShE,UAAU,SAAnB,SACE,qDACsB,IACpB,sBAAMiE,KAAK,MAAM,aAAY,WAA7B,iCCARC,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAAC,EAAD,IACA,cAAC,EAAD,OAEFC,SAASC,eAAe,SAG1Bf,M","file":"static/js/main.09e131aa.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport const GET_WEATHER_REQUEST = 'GET_WEATHER_REQUEST';\r\nexport const GET_WEATHER_SUCCESS = 'GET_WEATHER_SUCCESS';\r\nexport const GET_WEATHER_FAIL = 'GET_WEATHER_FAIL';\r\n\r\nexport const GET_MY_WEATHER_REQUEST = 'GET_MY_WEATHER_REQUEST';\r\nexport const GET_MY_WEATHER_SUCCESS = 'GET_MY_WEATHER_SUCCESS';\r\nexport const GET_MY_WEATHER_FAIL = 'GET_MY_WEATHER_FAIL';\r\n\r\nexport const getWeather = (cityName) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: GET_WEATHER_REQUEST,\r\n    });\r\n\r\n    const response = await axios.post(`/weather?city=${cityName}`);\r\n    const data = await response.data;\r\n    dispatch({\r\n      type: GET_WEATHER_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_WEATHER_FAIL,\r\n      payload: error,\r\n    });\r\n    console.log(`could not get weather info : ${error}`);\r\n  }\r\n};\r\n\r\nexport const getMyWeather =\r\n  ({ lat, long }) =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch({\r\n        type: GET_MY_WEATHER_REQUEST,\r\n      });\r\n\r\n      const response = await axios.post(\r\n        `/weather/myWeather?lat=${lat}&long=${long}`\r\n      );\r\n      const data = await response.data;\r\n      dispatch({\r\n        type: GET_MY_WEATHER_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: GET_MY_WEATHER_FAIL,\r\n        payload: error,\r\n      });\r\n      console.log(`could not get weather info : ${error}`);\r\n    }\r\n  };\r\n","import {\r\n  GET_WEATHER_REQUEST,\r\n  GET_WEATHER_SUCCESS,\r\n  GET_WEATHER_FAIL,\r\n} from './actions';\r\n\r\nconst initialState = {\r\n  weatherData: null,\r\n  isLoading: false,\r\n  error: null,\r\n};\r\n\r\nexport const weatherReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_WEATHER_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case GET_WEATHER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        weatherData: action.payload,\r\n        isLoading: false,\r\n      };\r\n\r\n    case GET_WEATHER_FAIL:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default weatherReducer;\r\n","import {\r\n  GET_MY_WEATHER_REQUEST,\r\n  GET_MY_WEATHER_SUCCESS,\r\n  GET_MY_WEATHER_FAIL,\r\n} from './actions';\r\n\r\nconst initialState = {\r\n  myWeatherData: null,\r\n  isLoading: false,\r\n  error: null,\r\n};\r\n\r\nexport const myWeatherReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_MY_WEATHER_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case GET_MY_WEATHER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        myWeatherData: action.payload,\r\n        isLoading: false,\r\n      };\r\n\r\n    case GET_MY_WEATHER_FAIL:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default myWeatherReducer;\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport { weatherReducer } from './weatherReducer';\r\nimport { myWeatherReducer } from './myWeatherReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  weather: weatherReducer,\r\n  myWeather: myWeatherReducer,\r\n});\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getWeather, getMyWeather } from '../redux/actions';\r\n\r\nconst WeatherFormSecond = () => {\r\n  const dispatch = useDispatch();\r\n  const [city, setCity] = useState('');\r\n  const [lat, setLat] = useState('');\r\n  const [long, setLong] = useState('');\r\n\r\n  const handleOnsubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(getWeather(city));\r\n  };\r\n\r\n  useEffect(() => {\r\n    navigator.geolocation.getCurrentPosition((position) => {\r\n      setLat(position.coords.latitude);\r\n      setLong(position.coords.longitude);\r\n    });\r\n  }, []);\r\n\r\n  const handleGetWeather = () => {\r\n    dispatch(getMyWeather({ lat, long }));\r\n  };\r\n\r\n  return (\r\n    <section className=\"forms-container\">\r\n      <div>\r\n        <Button onClick={() => handleGetWeather()}>Get Weather</Button>\r\n      </div>\r\n      <div>\r\n        <Form className=\"city-weather\" onSubmit={handleOnsubmit}>\r\n          <Form.Control\r\n            name=\"city\"\r\n            value={city}\r\n            type=\"text\"\r\n            placeholder=\"Enter city name\"\r\n            onChange={(e) => setCity(e.target.value)}\r\n          />\r\n          <Button style={{ marginLeft: '5px' }} type=\"submit\">\r\n            send\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default WeatherFormSecond;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst WeatherInfoPanel = () => {\r\n  const weather = useSelector((state) => state.weather);\r\n  const { weatherData, isLoading } = weather;\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <div className=\"d-flex justify-content-center\">\r\n          <p>Loading...</p>\r\n        </div>\r\n      ) : weatherData === null ? (\r\n        <div></div>\r\n      ) : (\r\n        <section className=\"weather-info\">\r\n          <div className=\"d-flex justify-content-center\">\r\n            <h3 style={{ marginRight: '10px' }} className=\"city-name\">\r\n              {weatherData.data.name}\r\n            </h3>\r\n            <h3 className=\"city-name\">{weatherData.data.sys.country}</h3>\r\n          </div>\r\n          <section className=\"overcast\">\r\n            <img\r\n              src={`http://openweathermap.org/img/wn/${weatherData.data.weather[0].icon}@2x.png`}\r\n              className=\"overcast-img\"\r\n              alt=\"weather icon\"\r\n            />\r\n            <span className=\"overcast-description\">\r\n              {weatherData.data.weather[0].description}\r\n            </span>\r\n          </section>\r\n\r\n          <hr />\r\n\r\n          <section className=\"current-weather\">\r\n            <span className=\"humidity\">\r\n              Humidity: {weatherData.data.main.humidity}%\r\n            </span>\r\n            <span className=\"curr-temp\">\r\n              Temp: {weatherData.data.main.temp}°F\r\n            </span>\r\n            <span className=\"feels-like\">\r\n              Feels like: {weatherData.data.main.temp}°F\r\n            </span>\r\n          </section>\r\n\r\n          <hr />\r\n\r\n          <section className=\"temps\">\r\n            <span className=\"min-temp\">\r\n              Low: {weatherData.data.main.temp_min}°F\r\n            </span>\r\n            <span className=\"max-temp\">\r\n              High: {weatherData.data.main.temp_max}°F\r\n            </span>\r\n          </section>\r\n        </section>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WeatherInfoPanel;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst MyWeather = () => {\r\n  const weather = useSelector((state) => state.myWeather);\r\n  const { myWeatherData, isLoading } = weather;\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <div className=\"d-flex justify-content-center\">\r\n          <p>Loading...</p>\r\n        </div>\r\n      ) : myWeatherData === null ? (\r\n        <div></div>\r\n      ) : (\r\n        <section className=\"weather-info\">\r\n          <div className=\"d-flex justify-content-center\">\r\n            <h3 style={{ marginRight: '10px' }} className=\"city-name\">\r\n              {myWeatherData.data.name}\r\n            </h3>\r\n            <h3 className=\"city-name\">{myWeatherData.data.sys.country}</h3>\r\n          </div>\r\n          <section className=\"overcast\">\r\n            <img\r\n              src={`http://openweathermap.org/img/wn/${myWeatherData.data.weather[0].icon}@2x.png`}\r\n              className=\"overcast-img\"\r\n              alt=\"weather icon\"\r\n            />\r\n            <span className=\"overcast-description\">\r\n              {myWeatherData.data.weather[0].description}\r\n            </span>\r\n          </section>\r\n\r\n          <hr />\r\n\r\n          <section className=\"current-weather\">\r\n            <span className=\"humidity\">\r\n              Humidity: {myWeatherData.data.main.humidity}%\r\n            </span>\r\n            <span className=\"curr-temp\">\r\n              Temp: {myWeatherData.data.main.temp}°F\r\n            </span>\r\n            <span className=\"feels-like\">\r\n              Feels like: {myWeatherData.data.main.temp}°F\r\n            </span>\r\n          </section>\r\n\r\n          <hr />\r\n\r\n          <section className=\"temps\">\r\n            <span className=\"min-temp\">\r\n              Low: {myWeatherData.data.main.temp_min}°F\r\n            </span>\r\n            <span className=\"max-temp\">\r\n              High: {myWeatherData.data.main.temp_max}°F\r\n            </span>\r\n          </section>\r\n        </section>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyWeather;\r\n","import React from 'react';\r\nimport WeatherInfoPanel from './WeatherInfoPanel';\r\nimport MyWeather from './MyWeather';\r\n\r\nconst WeatherData = () => {\r\n  return (\r\n    <section>\r\n      <div>\r\n        <MyWeather />\r\n      </div>\r\n      <div>\r\n        <WeatherInfoPanel />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default WeatherData;\r\n","import React, { Component } from 'react';\r\nimport { Card, ListGroup } from 'react-bootstrap';\r\n\r\nclass WeatherHistoryPanel extends Component {\r\n  state = {\r\n    history: [\r\n      {\r\n        timestamp: '7/27/2020, 11:10:33 PM',\r\n        city: 'Fort Worth',\r\n        zipcode: '76108',\r\n        temperature: 82.13,\r\n        description: 'clear sky',\r\n      },\r\n      {\r\n        timestamp: '7/27/2020, 11:10:36 PM',\r\n        city: 'Redmond',\r\n        zipcode: '98052',\r\n        temperature: 73.67,\r\n        description: 'clear sky',\r\n      },\r\n    ],\r\n  };\r\n\r\n  createHistoryList = () => {\r\n    let historyComponents = [];\r\n    let historyList = this.state.history;\r\n\r\n    // Listing history of zip code submissions in \"most recent\" order\r\n    for (let i = historyList.length - 1; i >= 0; i--) {\r\n      let infoCard = this.getInfoListItem(historyList[i]);\r\n      historyComponents.push(infoCard);\r\n    }\r\n\r\n    return (\r\n      <Card>\r\n        <ListGroup variant=\"flush\">{historyComponents}</ListGroup>\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  getInfoListItem = (info) => {\r\n    return (\r\n      <ListGroup.Item key={info.city}>\r\n        <b>{info.timestamp}</b> - [{info.city}, {info.zipcode}]:[\r\n        {info.temperature}, {info.description}]\r\n      </ListGroup.Item>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"weather-history-panel\">\r\n        {!!this.state.history.length ? this.createHistoryList() : 'No History!'}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WeatherHistoryPanel;\r\n","import React from 'react';\r\nimport WeatherData from './WeatherData';\r\nimport WeatherHistoryPanel from './WeatherHistoryPanel';\r\n\r\nconst WeatherPanels = () => {\r\n  return (\r\n    <section className=\"weather-panels\">\r\n      <WeatherData />\r\n      <WeatherHistoryPanel />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default WeatherPanels;\r\n","import React from 'react';\r\n// import WeatherForm from './WeatherForm';\r\nimport WeatherFormSecond from './WeatherFormSecond';\r\nimport WeatherPanels from './WeatherPanels';\r\n\r\nconst Container = () => {\r\n  return (\r\n    <section className=\"weather container\">\r\n      {/* <WeatherForm /> */}\r\n      <WeatherFormSecond />\r\n      <WeatherPanels />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Container;\r\n","import { Provider } from 'react-redux';\nimport store from './redux/store';\nimport './styles/App.scss';\nimport Container from './components/Container';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Container />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <section className=\"header\">\r\n      <h1>\r\n        Weathering with you{' '}\r\n        <span role=\"img\" aria-label={'umbrella'}>\r\n          ☂️\r\n        </span>\r\n      </h1>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Header from './components/Header';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Header />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}